name: Build and Deploy Code

# on: # Some actions triggered it like push, merge or both [push, pull_request]
#   push:
#     branches: # Put some branches you wanna update here like main, or both ["main", "another branch"]
#       - "main"
#       - "another branches"
#   pull_request:
#     branches:
#       - "test_branch"

on: [push, pull_request] # define these actions to trigger our workflow

# Next, create a job, which is a list of steps
jobs:
  job1:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      secret_key: ${{secrets.secret_key}}
      algorithm: ${{secrets.algorithm}}
      access_token_expires_minutes: ${{secrets.access_token_expires_minutes}}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest # Specify operating system, like linux, mac(macos-latest) or window.
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v2
      # Just for example how to setup task step by step
      # - name: Say hi to ethan
      #   run: echo "hello ethan"
      - name: Install python version 3.9
        uses: actions/setup-python @v2
        with:
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: Install all dependencies
        run: pip install -r requirement.txt
      - name: Install and work with pytest
        run: pip install pytest
          pytest

      - name: Login to docker hub
        uses: docker-login/action@v1
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

      # Optimize our process so that not need to reinstall anything, save money and time!!!

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
